import cv2
net = cv2.dnn.readNetFromCaffe(
r'D:\2023 - 2024\AI\Lab
Manual\models\MobileNetSSD_deploy.prototxt',
r'D:\2023 - 2024\AI\Lab
Manual\models\MobileNetSSD_deploy.caffemodel'
)
def detect_objects(image):
# Resize the image for processing
resized = cv2.resize(image, (300, 300))
blob = cv2.dnn.blobFromImage(resized, 0.007843, (300, 300),
127.5)
# Set the input to the model
net.setInput(blob)
# Run forward pass to get detection results

detections = net.forward()
# Loop over the detections
for i in range(detections.shape[2]):
confidence = detections[0, 0, i, 2]
# Filter out weak detections by confidence threshold
if confidence > 0.2:
class_id = int(detections[0, 0, i, 1])
confidence = confidence * 100
# Get bounding box coordinates
box = detections[0, 0, i, 3:7] * [image.shape[1],
image.shape[0], image.shape[1], image.shape[0]]
(startX, startY, endX, endY) = box.astype("int")

# Draw the bounding box and label on the image
cv2.rectangle(image, (startX, startY), (endX, endY),
(0, 255, 0), 2)
label = f"Class {class_id}: {confidence:.2f}%"
cv2.putText(image, label, (startX, startY - 15),
cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
return image
# Load the input image
image_path = r'D:\2023 - 2024\AI\Lab Manual\child.jpeg'
image = cv2.imread(image_path)
# Detect objects in the image
result_image = detect_objects(image)
# Display the result
cv2.imshow('Object Detection', result_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
